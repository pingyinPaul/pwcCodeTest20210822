{"ast":null,"code":"var _jsxFileName = \"/Users/treeright/Desktop/test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport { Alert, Button, Modal, ProgressBar } from \"react-bootstrap\";\nimport Board from 'react-trello';\nimport Header from './Header';\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment';\nimport '@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css';\nimport Paper from '@material-ui/core/Paper';\nimport { GroupingState, IntegratedGrouping, SortingState, IntegratedSorting } from '@devexpress/dx-react-grid';\nimport { Grid, Table, TableHeaderRow, TableGroupRow, GroupingPanel, Toolbar } from '@devexpress/dx-react-grid-material-ui';\nimport ListIcon from '@material-ui/icons/List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState();\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [kanban, setKanban] = useState(true);\n  const [statusList, setStatusList] = useState([]);\n  const [responseData, setReponseData] = useState([]);\n  const [data, setData] = useState();\n  const [show, setShow] = useState(false);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [showCreate, setShowCreate] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleCloseCreate = () => setShowCreate(false);\n\n  const handleShowCreate = () => setShowCreate(true);\n\n  const handleCloseUpdate = () => setShowUpdate(false);\n\n  const handleKanban = () => {\n    if (kanban) {\n      setKanban(false);\n    } else {\n      setKanban(true);\n    }\n  };\n\n  const [dataTemp, setDataTemp] = useState({\n    lanes: []\n  });\n  const [currentUser, setCurrentUser] = useState('admin');\n  const REACT_APP_BACKEND_URL = 'http://127.0.0.1:8000'; // New request \n\n  const [startDate, setStartDate] = useState(new Date());\n  const [subject, setSubject] = useState();\n  const [type, setType] = useState('Other');\n  const [territory, setTerritory] = useState('Other');\n  const [version, setVersion] = useState();\n  const [assignee, setAssignee] = useState();\n  const [description, setDescription] = useState();\n  const [startDateUpdate, setStartDateUpdate] = useState(new Date());\n  const [subjectUpdate, setSubjectUpdate] = useState();\n  const [typeUpdate, setTypeUpdate] = useState();\n  const [territoryUpdate, setTerritoryUpdate] = useState();\n  const [versionUpdate, setVersionUpdate] = useState();\n  const [assigneeUpdate, setAssigneeUpdate] = useState();\n  const [descriptionUpdate, setDescriptionUpdate] = useState();\n  const [currentCradId, setCurrentCardId] = useState();\n  const [newColumn, setNewColumn] = useState();\n  const [columns, setColumns] = useState([{\n    name: 'requestor',\n    title: 'Requestor'\n  }, {\n    name: 'description',\n    title: 'Description'\n  }, {\n    name: 'wish_type',\n    title: 'Tag'\n  }, {\n    name: 'date',\n    title: 'Due date'\n  }, {\n    name: 'updated_at',\n    title: 'Last modified'\n  }, {\n    name: 'status',\n    title: 'Status'\n  }]);\n  const [rows, setRows] = useState([{\n    \"id\": 4,\n    \"status\": {\n      \"id\": 1,\n      \"status\": \"Draft\"\n    },\n    \"date\": \"2021-08-21\",\n    \"wish_type\": \"Other\",\n    \"subject\": \"testing 1\",\n    \"territory\": \"Other\",\n    \"asignee\": \"Me\",\n    \"version\": \"1\",\n    \"description\": \"me agina\",\n    \"updated_at\": \"2021-08-21T22:41:15.570812+08:00\",\n    \"requestor\": 118\n  }]);\n\n  const handleShowUpdate = (cardId, metadata, laneId) => {\n    setShowUpdate(true);\n    const updateInstance = responseData.find(({\n      id\n    }) => id === cardId);\n    setStartDateUpdate(new Date(updateInstance.date));\n    setSubjectUpdate(updateInstance.subject);\n    setTypeUpdate(updateInstance.wish_type);\n    setTerritoryUpdate(updateInstance.territory);\n    setVersionUpdate(updateInstance.version);\n    setAssigneeUpdate(updateInstance.asignee);\n    setDescriptionUpdate(updateInstance.description);\n    setCurrentCardId(cardId);\n  };\n\n  const login = async () => {\n    const fetchRes = await fetch(`${REACT_APP_BACKEND_URL}/api/token/`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"username\": username,\n        \"password\": password\n      })\n    });\n\n    if (fetchRes.status === 401) {}\n\n    if (fetchRes.status === 500) {\n      return;\n    }\n\n    const res = await fetchRes.json();\n\n    if (res.access) {\n      console.log(res.access);\n      setToken(res.access);\n      loginHandler(res.access);\n    }\n  };\n\n  const handleDrag = async (cardId, sourceLaneId, targetLaneId, position, cardDetails) => {\n    console.log(cardId, sourceLaneId, targetLaneId, position, cardDetails);\n    const content = {\n      'status': targetLaneId\n    };\n    const fetchRes = await fetch(`${REACT_APP_BACKEND_URL}/api/wishList/put/${cardId}/`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(content)\n    });\n    var afterFetch = await fetching(token);\n    console.log(afterFetch);\n    setData(afterFetch);\n  };\n\n  let componentMounted = true; // (3) component is mounted\n\n  async function getCardByReponse(responseStatus, response, i) {\n    var thisCards = [];\n    console.log(response);\n\n    for (let k = 0; k < response.length; k++) {\n      console.log(response[k]);\n      console.log(k);\n\n      if (response[k] == undefined) {\n        continue;\n      }\n\n      if (response[k].status == responseStatus[i]) {\n        console.log('one of it', response[k].subject);\n        var thisCardObj = {\n          id: response[k].id,\n          title: response[k].subject,\n          description: response[k].description,\n          label: response[k].date\n        };\n        thisCards.push(thisCardObj);\n        console.log(thisCardObj);\n      } else {\n        continue;\n      }\n    }\n\n    console.log('thisCard: ' + thisCards);\n    return thisCards;\n  }\n\n  async function fetching(tokenPass) {\n    const resStatus = await fetch(`${REACT_APP_BACKEND_URL}/api/wishList/status/`, {\n      method: \"GET\"\n    });\n    const responseStatus = await resStatus.json();\n    console.log(responseStatus.status);\n    await setStatusList(responseStatus.status);\n    console.log(tokenPass);\n    const res = await fetch(`${REACT_APP_BACKEND_URL}/api/wishList/`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${tokenPass}`\n      } // body: JSON.stringify({ user: 'admin' })\n\n    });\n    const response = await res.json();\n    console.log(response);\n    var dataFromat = {\n      lanes: [],\n      collapsibleLanes: true,\n      cardDraggable: true,\n      editable: true,\n      canAddLanes: true,\n      editLaneTitle: true\n    };\n    setReponseData(response);\n    var showRes = response;\n    showRes.forEach(res => {\n      res.status = res.status.status;\n    });\n    setRows(showRes);\n\n    for (var i = 0; i < responseStatus.status.length; i++) {\n      console.log('hiohi');\n      var thisCards = await getCardByReponse(responseStatus.status, response, i);\n      var laneObj = {\n        id: responseStatus.status[i],\n        title: responseStatus.status[i],\n        label: ' ',\n        cards: thisCards\n      };\n      dataFromat['lanes'].push(laneObj);\n    }\n\n    console.log(response);\n    return dataFromat;\n  }\n\n  async function loginHandler(token) {\n    var afterFetch = await fetching(token);\n    console.log(afterFetch);\n    setData(afterFetch);\n  }\n\n  const handleSubmit = async () => {\n    console.log(type);\n    const content = {\n      'requestor': currentUser,\n      'subject': subject,\n      'date': moment(startDate).format('YYYY-MM-DD'),\n      'status': 'Draft',\n      'wish_type': type,\n      'territory': territory,\n      'asignee': assignee,\n      'version': version,\n      'description': description\n    };\n    console.log(token);\n    const fetchRes = await fetch(`${REACT_APP_BACKEND_URL}/api/wishList/post/`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(content)\n    });\n    var afterFetch = await fetching(token);\n    console.log(afterFetch);\n    setData(afterFetch);\n    handleClose();\n  };\n\n  const handleSubmitUpdate = async () => {\n    const content = {\n      'subject': subjectUpdate,\n      'date': moment(startDateUpdate).format('YYYY-MM-DD'),\n      'wish_type': typeUpdate,\n      'territory': territoryUpdate,\n      'asignee': assigneeUpdate,\n      'version': versionUpdate,\n      'description': descriptionUpdate\n    };\n    const fetchRes = await fetch(`${REACT_APP_BACKEND_URL}/api/wishList/put/${currentCradId}/`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(content)\n    });\n    var afterFetch = await fetching(token);\n    console.log(afterFetch);\n    setData(afterFetch);\n    handleCloseUpdate();\n  };\n\n  const handleCreateStatus = async () => {\n    const content = {\n      'status': newColumn\n    };\n    const fetchRes = await fetch(`${REACT_APP_BACKEND_URL}/api/status/post/`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(content)\n    });\n    const response = await fetchRes.json();\n    console.log(response);\n\n    if (response) {\n      fetching(token);\n      handleCloseCreate();\n    }\n  };\n\n  const handleCardDelete = async (cardId, laneId) => {\n    const fetchRes = await fetch(`${REACT_APP_BACKEND_URL}/api/wishList/put/${cardId}/`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    var afterFetch = await fetching(token);\n    console.log(afterFetch);\n    setData(afterFetch);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      dialogClassName: \"modal-90w\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Subject:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"note\",\n            value: subject,\n            placeholder: \"\",\n            onChange: e => setSubject(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Due Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: startDate,\n            onChange: date => setStartDate(date),\n            className: \"note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: type,\n            className: \"note\",\n            onChange: e => setType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Wishlist\",\n              children: \" Wishlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \" Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Territory:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: territory,\n            className: \"note\",\n            onChange: e => setTerritory(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PwC Mekong\",\n              children: \" PwC Mekong\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \" Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"DM Version:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"note\",\n            value: version,\n            placeholder: \"\",\n            onChange: e => setVersion(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Assignee:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"note\",\n            value: assignee,\n            placeholder: \"\",\n            onChange: e => setAssignee(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"note\",\n            value: description,\n            placeholder: \"Request details\",\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showUpdate,\n      onHide: handleCloseUpdate,\n      dialogClassName: \"modal-90w\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Subject:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"note\",\n            value: subjectUpdate,\n            placeholder: \"\",\n            onChange: e => setSubjectUpdate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Due Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: startDateUpdate,\n            onChange: date => setStartDateUpdate(date),\n            className: \"note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: typeUpdate,\n            className: \"note\",\n            onChange: e => setTypeUpdate(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Wishlist\",\n              children: \" Wishlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \" Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Territory:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: territoryUpdate,\n            className: \"note\",\n            onChange: e => setTerritoryUpdate(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PwC Mekong\",\n              children: \" PwC Mekong\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \" Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"DM Version:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"note\",\n            value: versionUpdate,\n            placeholder: \"\",\n            onChange: e => setVersionUpdate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Assignee:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"note\",\n            value: assigneeUpdate,\n            placeholder: \"\",\n            onChange: e => setAssigneeUpdate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"note\",\n            value: descriptionUpdate,\n            placeholder: \"Request details\",\n            onChange: e => setDescriptionUpdate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseUpdate,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmitUpdate,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showCreate,\n      onHide: handleCloseCreate,\n      dialogClassName: \"modal-90w\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"New Column:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"note\",\n            value: newColumn,\n            placeholder: \"\",\n            onChange: e => setNewColumn(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseCreate,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleCreateStatus,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }, this), token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boardDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row Boardheader\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4 requestHeader\",\n            children: \" All request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 \",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-1 requestHeader\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleKanban,\n              children: \" List View \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 newRequest\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShow,\n              children: \" New request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 newRequest\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShowCreate,\n              children: \" New Column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boardDiv\",\n        children: kanban ? /*#__PURE__*/_jsxDEV(Board, {\n          data: data ? data : dataTemp,\n          handleDragEnd: handleDrag,\n          onCardClick: handleShowUpdate,\n          onCardDelete: handleCardDelete,\n          style: {\n            width: '95vw',\n            height: '80vh',\n            backgroundColor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            rows: rows,\n            columns: columns,\n            children: [/*#__PURE__*/_jsxDEV(SortingState, {\n              defaultSorting: [{\n                columnName: 'date',\n                direction: 'asc'\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GroupingState, {\n              grouping: [{\n                columnName: 'status'\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IntegratedSorting, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IntegratedGrouping, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableHeaderRow, {\n              showSortingControls: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableGroupRow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GroupingPanel, {\n              showSortingControls: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"admin1 / requestor1/ requestor2\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"admin234567 / re234567/ re234567\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"2kJ2jE9ANwlMAzJJQhwEyNts1FQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/treeright/Desktop/test/src/App.js"],"names":["React","useCallback","useEffect","useState","useRef","Alert","Button","Modal","ProgressBar","Board","Header","DatePicker","moment","Paper","GroupingState","IntegratedGrouping","SortingState","IntegratedSorting","Grid","Table","TableHeaderRow","TableGroupRow","GroupingPanel","Toolbar","ListIcon","App","token","setToken","username","setUsername","password","setPassword","kanban","setKanban","statusList","setStatusList","responseData","setReponseData","data","setData","show","setShow","showUpdate","setShowUpdate","showCreate","setShowCreate","handleClose","handleShow","handleCloseCreate","handleShowCreate","handleCloseUpdate","handleKanban","dataTemp","setDataTemp","lanes","currentUser","setCurrentUser","REACT_APP_BACKEND_URL","startDate","setStartDate","Date","subject","setSubject","type","setType","territory","setTerritory","version","setVersion","assignee","setAssignee","description","setDescription","startDateUpdate","setStartDateUpdate","subjectUpdate","setSubjectUpdate","typeUpdate","setTypeUpdate","territoryUpdate","setTerritoryUpdate","versionUpdate","setVersionUpdate","assigneeUpdate","setAssigneeUpdate","descriptionUpdate","setDescriptionUpdate","currentCradId","setCurrentCardId","newColumn","setNewColumn","columns","setColumns","name","title","rows","setRows","handleShowUpdate","cardId","metadata","laneId","updateInstance","find","id","date","wish_type","asignee","login","fetchRes","fetch","method","headers","body","JSON","stringify","status","res","json","access","console","log","loginHandler","handleDrag","sourceLaneId","targetLaneId","position","cardDetails","content","Authorization","afterFetch","fetching","componentMounted","getCardByReponse","responseStatus","response","i","thisCards","k","length","undefined","thisCardObj","label","push","tokenPass","resStatus","dataFromat","collapsibleLanes","cardDraggable","editable","canAddLanes","editLaneTitle","showRes","forEach","laneObj","cards","handleSubmit","format","handleSubmitUpdate","handleCreateStatus","handleCardDelete","e","target","value","width","height","backgroundColor","columnName","direction"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport { Alert, Button, Modal, ProgressBar } from \"react-bootstrap\";\nimport Board from 'react-trello'\nimport Header from './Header'\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment'\nimport '@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  GroupingState,\n  IntegratedGrouping,\n  SortingState,\n  IntegratedSorting,\n} from '@devexpress/dx-react-grid';\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n  TableGroupRow,\n  GroupingPanel,\n  Toolbar,\n} from '@devexpress/dx-react-grid-material-ui';\nimport ListIcon from '@material-ui/icons/List';\nfunction App() {\n  const [token, setToken] = useState()\n  const [username, setUsername] = useState()\n  const [password, setPassword] = useState()\n  const [kanban, setKanban] = useState(true)\n  const [statusList, setStatusList] = useState([])\n  const [responseData, setReponseData] = useState([])\n  const [data, setData] = useState();\n  const [show, setShow] = useState(false);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [showCreate, setShowCreate] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleCloseCreate = () => setShowCreate(false);\n  const handleShowCreate = () => setShowCreate(true);\n  const handleCloseUpdate = () => setShowUpdate(false);\n  const handleKanban = () => {\n    if (kanban) { setKanban(false) }\n    else { setKanban(true) }\n  };\n\n  const [dataTemp, setDataTemp] = useState({\n    lanes: [\n    ]\n  });\n  const [currentUser, setCurrentUser] = useState('admin');\n  const REACT_APP_BACKEND_URL = 'http://127.0.0.1:8000'\n  // New request \n  const [startDate, setStartDate] = useState(new Date());\n  const [subject, setSubject] = useState()\n  const [type, setType] = useState('Other')\n  const [territory, setTerritory] = useState('Other')\n  const [version, setVersion] = useState()\n  const [assignee, setAssignee] = useState()\n  const [description, setDescription] = useState()\n  const [startDateUpdate, setStartDateUpdate] = useState(new Date());\n  const [subjectUpdate, setSubjectUpdate] = useState()\n  const [typeUpdate, setTypeUpdate] = useState()\n  const [territoryUpdate, setTerritoryUpdate] = useState()\n  const [versionUpdate, setVersionUpdate] = useState()\n  const [assigneeUpdate, setAssigneeUpdate] = useState()\n  const [descriptionUpdate, setDescriptionUpdate] = useState()\n  const [currentCradId, setCurrentCardId] = useState()\n  const [newColumn, setNewColumn] = useState()\n  const [columns, setColumns] = useState([\n    { name: 'requestor', title: 'Requestor' },\n    { name: 'description', title: 'Description' },\n    { name: 'wish_type', title: 'Tag' },\n    { name: 'date', title: 'Due date' },\n    { name: 'updated_at', title: 'Last modified' },\n    { name: 'status', title: 'Status' }\n  ])\n  const [rows, setRows] = useState([{\n    \"id\": 4,\n    \"status\": {\n      \"id\": 1,\n      \"status\": \"Draft\"\n    },\n    \"date\": \"2021-08-21\",\n    \"wish_type\": \"Other\",\n    \"subject\": \"testing 1\",\n    \"territory\": \"Other\",\n    \"asignee\": \"Me\",\n    \"version\": \"1\",\n    \"description\": \"me agina\",\n    \"updated_at\": \"2021-08-21T22:41:15.570812+08:00\",\n    \"requestor\": 118\n  }])\n  const handleShowUpdate = (cardId, metadata, laneId) => {\n    setShowUpdate(true)\n    const updateInstance = responseData.find(({ id }) => id === cardId);\n    setStartDateUpdate(new Date(updateInstance.date))\n    setSubjectUpdate(updateInstance.subject)\n    setTypeUpdate(updateInstance.wish_type)\n    setTerritoryUpdate(updateInstance.territory)\n    setVersionUpdate(updateInstance.version)\n    setAssigneeUpdate(updateInstance.asignee)\n    setDescriptionUpdate(updateInstance.description)\n    setCurrentCardId(cardId)\n  };\n  const login = async () => {\n    const fetchRes = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/token/`,\n      {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          \"username\": username,\n          \"password\": password\n        })\n      }\n    );\n    if (fetchRes.status === 401) {\n    }\n    if (fetchRes.status === 500) {\n      return;\n    }\n    const res = await fetchRes.json();\n\n    if (res.access) {\n      console.log(res.access)\n      setToken(res.access)\n      loginHandler(res.access)\n    }\n\n  }\n  const handleDrag = async (cardId, sourceLaneId, targetLaneId, position, cardDetails) => {\n    console.log(cardId, sourceLaneId, targetLaneId, position, cardDetails)\n    const content = {\n      'status': targetLaneId,\n    };\n    const fetchRes = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/wishList/put/${cardId}/`,\n      {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(content),\n      }\n    );\n    var afterFetch = await fetching(token)\n    console.log(afterFetch)\n    setData(afterFetch)\n  }\n  let componentMounted = true; // (3) component is mounted\n\n  async function getCardByReponse(responseStatus, response, i) {\n    var thisCards = []\n    console.log(response)\n    for (let k = 0; k < response.length; k++) {\n      console.log(response[k])\n      console.log(k)\n      if (response[k] == undefined) { continue }\n      if (response[k].status == responseStatus[i]) {\n        console.log('one of it', response[k].subject)\n        var thisCardObj = {\n          id: response[k].id,\n          title: response[k].subject,\n          description: response[k].description,\n          label: response[k].date\n        }\n        thisCards.push(thisCardObj)\n        console.log(thisCardObj)\n      }\n      else {\n        continue;\n      }\n    }\n    console.log('thisCard: ' + thisCards)\n    return thisCards\n  }\n\n  async function fetching(tokenPass) {\n    const resStatus = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/wishList/status/`,\n      {\n        method: \"GET\",\n      }\n    );\n    const responseStatus = await resStatus.json()\n    console.log(responseStatus.status)\n    await setStatusList(responseStatus.status)\n    console.log(tokenPass)\n\n    const res = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/wishList/`,\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${tokenPass}`,\n        },\n        // body: JSON.stringify({ user: 'admin' })\n      }\n    );\n    const response = await res.json()\n    console.log(response)\n    var dataFromat = {\n      lanes: [\n\n      ],\n      collapsibleLanes: true,\n      cardDraggable: true,\n      editable: true,\n      canAddLanes: true,\n      editLaneTitle: true\n    }\n    setReponseData(response)\n    var showRes = response\n    showRes.forEach(res => {\n      res.status = res.status.status\n    });\n    setRows(showRes)\n    for (var i = 0; i < responseStatus.status.length; i++) {\n      console.log('hiohi')\n      var thisCards = await getCardByReponse(responseStatus.status, response, i)\n      var laneObj = {\n        id: responseStatus.status[i],\n        title: responseStatus.status[i],\n        label: ' ',\n        cards: thisCards\n      }\n      dataFromat['lanes'].push(laneObj)\n\n    }\n    console.log(response)\n    return dataFromat\n  }\n  async function loginHandler(token) {\n\n    var afterFetch = await fetching(token)\n    console.log(afterFetch)\n    setData(afterFetch)\n  }\n\n\n  const handleSubmit = async () => {\n    console.log(type)\n    const content = {\n      'requestor': currentUser,\n      'subject': subject,\n      'date': moment(startDate).format('YYYY-MM-DD'),\n      'status': 'Draft',\n      'wish_type': type,\n      'territory': territory,\n      'asignee': assignee,\n      'version': version,\n      'description': description\n    };\n    console.log(token)\n    const fetchRes = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/wishList/post/`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(content),\n      }\n    );\n    var afterFetch = await fetching(token)\n    console.log(afterFetch)\n    setData(afterFetch)\n    handleClose()\n  }\n  const handleSubmitUpdate = async () => {\n    const content = {\n      'subject': subjectUpdate,\n      'date': moment(startDateUpdate).format('YYYY-MM-DD'),\n      'wish_type': typeUpdate,\n      'territory': territoryUpdate,\n      'asignee': assigneeUpdate,\n      'version': versionUpdate,\n      'description': descriptionUpdate\n    };\n    const fetchRes = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/wishList/put/${currentCradId}/`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(content),\n      }\n    );\n    var afterFetch = await fetching(token)\n    console.log(afterFetch)\n    setData(afterFetch)\n    handleCloseUpdate()\n  }\n  const handleCreateStatus = async () => {\n    const content = {\n      'status': newColumn\n    };\n    const fetchRes = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/status/post/`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(content),\n      }\n    );\n    const response = await fetchRes.json()\n    console.log(response)\n    if (response) {\n      fetching(token)\n      handleCloseCreate()\n    }\n\n  }\n  const handleCardDelete = async (cardId, laneId) => {\n\n    const fetchRes = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/wishList/put/${cardId}/`,\n      {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    var afterFetch = await fetching(token)\n    console.log(afterFetch)\n    setData(afterFetch)\n\n  }\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose} dialogClassName=\"modal-90w\"\n      >\n        <Modal.Header >\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row\">\n            <label>\n              Subject:\n            </label>\n            <input\n              className=\"note\"\n              value={subject}\n              placeholder=\"\"\n              onChange={(e) => setSubject(e.target.value)}\n            >\n            </input>\n          </div>\n          <div className=\"row\">\n\n            <label>\n              Due Date:\n            </label>\n            <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} className='note' />\n          </div>\n          <div className=\"row\">\n\n            <label>\n              Type:\n            </label>\n            <select value={type} className=\"note\" onChange={(e) => setType(e.target.value)}>\n              <option value=\"Wishlist\"> Wishlist</option>\n              <option value=\"Other\"> Other</option>\n            </select>\n\n          </div>\n          <div className=\"row\">\n\n            <label>\n              Territory:\n            </label>\n            <select value={territory} className=\"note\" onChange={(e) => setTerritory(e.target.value)}>\n              <option value=\"PwC Mekong\"> PwC Mekong</option>\n              <option value=\"Other\"> Other</option>\n            </select>\n\n\n          </div>\n          <div className=\"row\">\n\n            <label>\n              DM Version:\n            </label>\n            <input\n              className=\"note\"\n              value={version}\n              placeholder=\"\"\n              onChange={(e) => setVersion(e.target.value)}\n            >\n            </input>\n          </div>\n          <div className=\"row\">\n\n            <label>\n              Assignee:\n            </label>\n            <input\n              className=\"note\"\n              value={assignee}\n              placeholder=\"\"\n              onChange={(e) => setAssignee(e.target.value)}\n            >\n            </input>\n          </div>\n          <div className=\"row\">\n\n            <label>\n              Description:\n            </label>\n            <textarea\n              className=\"note\"\n              value={description}\n              placeholder=\"Request details\"\n              onChange={(e) => setDescription(e.target.value)}\n            >\n            </textarea>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleSubmit}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal show={showUpdate} onHide={handleCloseUpdate} dialogClassName=\"modal-90w\"\n      >\n        <Modal.Header >\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row\">\n            <label>\n              Subject:\n            </label>\n            <input\n              className=\"note\"\n              value={subjectUpdate}\n              placeholder=\"\"\n              onChange={(e) => setSubjectUpdate(e.target.value)}\n            >\n            </input>\n          </div>\n          <div className=\"row\">\n\n            <label>\n              Due Date:\n            </label>\n            <DatePicker selected={startDateUpdate} onChange={(date) => setStartDateUpdate(date)} className='note' />\n          </div>\n          <div className=\"row\">\n\n            <label>\n              Type:\n            </label>\n            <select value={typeUpdate} className=\"note\" onChange={(e) => setTypeUpdate(e.target.value)}\n            >\n              <option value=\"Wishlist\"> Wishlist</option>\n              <option value=\"Other\"> Other</option>\n            </select>\n          </div>\n          <div className=\"row\">\n\n            <label>\n              Territory:\n            </label>\n            <select value={territoryUpdate} className=\"note\" onChange={(e) => setTerritoryUpdate(e.target.value)}\n            >\n              <option value=\"PwC Mekong\"> PwC Mekong</option>\n              <option value=\"Other\"> Other</option>\n            </select>\n          </div>\n          <div className=\"row\">\n\n            <label>\n              DM Version:\n            </label>\n            <input\n              className=\"note\"\n              value={versionUpdate}\n              placeholder=\"\"\n              onChange={(e) => setVersionUpdate(e.target.value)}\n            >\n            </input>\n          </div>\n          <div className=\"row\">\n\n            <label>\n              Assignee:\n            </label>\n            <input\n              className=\"note\"\n              value={assigneeUpdate}\n              placeholder=\"\"\n              onChange={(e) => setAssigneeUpdate(e.target.value)}\n            >\n            </input>\n          </div>\n          <div className=\"row\">\n\n            <label>\n              Description:\n            </label>\n            <textarea\n              className=\"note\"\n              value={descriptionUpdate}\n              placeholder=\"Request details\"\n              onChange={(e) => setDescriptionUpdate(e.target.value)}\n            >\n            </textarea>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseUpdate}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleSubmitUpdate}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal show={showCreate} onHide={handleCloseCreate} dialogClassName=\"modal-90w\">\n        <Modal.Header >\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row\">\n            <label>\n              New Column:\n            </label>\n            <input\n              className=\"note\"\n              value={newColumn}\n              placeholder=\"\"\n              onChange={(e) => setNewColumn(e.target.value)}\n            >\n            </input>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseCreate}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleCreateStatus}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {token ? <div className=\"App\">\n        <Header />\n        <div className='boardDiv'>\n          <div className='row Boardheader'>\n\n            <div className='col-md-4 requestHeader'> All request</div>\n            <div className='col-md-2 '> </div>\n            <div className='col-md-1 requestHeader' > <button onClick={handleKanban}> List View </button></div>\n            <div className='col-md-2 newRequest'> <button onClick={handleShow}> New request</button></div>\n            <div className='col-md-2 newRequest'> <button onClick={handleShowCreate}> New Column</button></div>\n\n          </div>\n        </div>\n        <div className='boardDiv'>\n          {kanban ? <Board data={data ? data : dataTemp} handleDragEnd={handleDrag} onCardClick={handleShowUpdate} onCardDelete={handleCardDelete} style={{ width: '95vw', height: '80vh', backgroundColor: 'white' }} />\n            : <Paper>\n              <Grid\n                rows={rows}\n                columns={columns}\n              >\n                <SortingState\n                  defaultSorting={[{ columnName: 'date', direction: 'asc' }]}\n                />\n                <GroupingState\n                  grouping={[{ columnName: 'status' }]}\n                />\n                <IntegratedSorting />\n\n                <IntegratedGrouping />\n\n                <Table />\n                <TableHeaderRow showSortingControls />\n                <TableGroupRow />\n                <Toolbar />\n                <GroupingPanel showSortingControls />\n              </Grid>\n            </Paper>}\n        </div>\n      </div> :\n        <div className=\"App\">\n          <div className=\"row\">\n            <label>Username</label><input placeholder='admin1 / requestor1/ requestor2' value={username} onChange={(e) => setUsername(e.target.value)}\n            ></input>\n          </div>\n          <div className='row'>\n            <label>Password</label><input placeholder='admin234567 / re234567/ re234567' value={password} onChange={(e) => setPassword(e.target.value)}\n            ></input>\n          </div>\n          <button onClick={login}>Login </button>\n        </div>\n      }\n    </>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}