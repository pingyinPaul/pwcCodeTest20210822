{"ast":null,"code":"var _jsxFileName = \"/Users/treeright/Desktop/pwcCodeTest20210822/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport { Alert, Button, Modal, ProgressBar } from \"react-bootstrap\";\nimport Board from 'react-trello';\nimport Header from './Header';\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment';\nimport '@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css';\nimport Paper from '@material-ui/core/Paper';\nimport { GroupingState, IntegratedGrouping, SortingState, IntegratedSorting } from '@devexpress/dx-react-grid';\nimport { Grid, Table, TableHeaderRow, TableGroupRow, GroupingPanel, Toolbar } from '@devexpress/dx-react-grid-material-ui';\nimport ListIcon from '@material-ui/icons/List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState();\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [kanban, setKanban] = useState(true);\n  const [statusList, setStatusList] = useState([]);\n  const [responseData, setReponseData] = useState([]);\n  const [data, setData] = useState();\n  const [show, setShow] = useState(false);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [showCreate, setShowCreate] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleCloseCreate = () => setShowCreate(false);\n\n  const handleShowCreate = () => setShowCreate(true);\n\n  const handleCloseUpdate = () => setShowUpdate(false);\n\n  const handleKanban = () => {\n    if (kanban) {\n      setKanban(false);\n    } else {\n      setKanban(true);\n    }\n  };\n\n  const [dataTemp, setDataTemp] = useState({\n    lanes: []\n  });\n  const [currentUser, setCurrentUser] = useState('admin');\n  const REACT_APP_BACKEND_URL = 'http://127.0.0.1:8000'; // New request \n\n  const [startDate, setStartDate] = useState(new Date());\n  const [subject, setSubject] = useState();\n  const [type, setType] = useState('Other');\n  const [territory, setTerritory] = useState('Other');\n  const [version, setVersion] = useState();\n  const [assignee, setAssignee] = useState();\n  const [description, setDescription] = useState();\n  const [startDateUpdate, setStartDateUpdate] = useState(new Date());\n  const [subjectUpdate, setSubjectUpdate] = useState();\n  const [typeUpdate, setTypeUpdate] = useState();\n  const [territoryUpdate, setTerritoryUpdate] = useState();\n  const [versionUpdate, setVersionUpdate] = useState();\n  const [assigneeUpdate, setAssigneeUpdate] = useState();\n  const [descriptionUpdate, setDescriptionUpdate] = useState();\n  const [currentCradId, setCurrentCardId] = useState();\n  const [newColumn, setNewColumn] = useState();\n  const [columns, setColumns] = useState([{\n    name: 'requestor',\n    title: 'Requestor'\n  }, {\n    name: 'description',\n    title: 'Description'\n  }, {\n    name: 'wish_type',\n    title: 'Tag'\n  }, {\n    name: 'date',\n    title: 'Due date'\n  }, {\n    name: 'updated_at',\n    title: 'Last modified'\n  }, {\n    name: 'status',\n    title: 'Status'\n  }]);\n  const [rows, setRows] = useState([{\n    \"id\": 4,\n    \"status\": {\n      \"id\": 1,\n      \"status\": \"Draft\"\n    },\n    \"date\": \"2021-08-21\",\n    \"wish_type\": \"Other\",\n    \"subject\": \"testing 1\",\n    \"territory\": \"Other\",\n    \"asignee\": \"Me\",\n    \"version\": \"1\",\n    \"description\": \"me agina\",\n    \"updated_at\": \"2021-08-21T22:41:15.570812+08:00\",\n    \"requestor\": 118\n  }]);\n\n  const handleShowUpdate = (cardId, metadata, laneId) => {\n    setShowUpdate(true);\n    const updateInstance = responseData.find(({\n      id\n    }) => id === cardId);\n    setStartDateUpdate(new Date(updateInstance.date));\n    setSubjectUpdate(updateInstance.subject);\n    setTypeUpdate(updateInstance.wish_type);\n    setTerritoryUpdate(updateInstance.territory);\n    setVersionUpdate(updateInstance.version);\n    setAssigneeUpdate(updateInstance.asignee);\n    setDescriptionUpdate(updateInstance.description);\n    setCurrentCardId(cardId);\n  };\n\n  const login = async () => {\n    const fetchRes = await fetch(`${REACT_APP_BACKEND_URL}/api/token/`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"username\": username,\n        \"password\": password\n      })\n    });\n    console.log(fetchRes.status);\n\n    if (fetchRes.status === 500) {\n      alert('Sever Error');\n      return;\n    }\n\n    const res = await fetchRes.json();\n\n    if (res.access) {\n      console.log(res.access);\n      setToken(res.access);\n      loginHandler(res.access);\n    }\n  };\n\n  const handleDrag = async (cardId, sourceLaneId, targetLaneId, position, cardDetails) => {\n    console.log(cardId, sourceLaneId, targetLaneId, position, cardDetails);\n    const content = {\n      'status': targetLaneId\n    };\n    const fetchRes = await fetch(`${REACT_APP_BACKEND_URL}/api/wishList/put/${cardId}/`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(content)\n    });\n\n    if (fetchRes.status === 500) {\n      alert('Sever Error');\n      return;\n    }\n\n    var afterFetch = await fetching(token);\n    console.log(afterFetch);\n    setData(afterFetch);\n  };\n\n  let componentMounted = true; // (3) component is mounted\n\n  async function getCardByReponse(responseStatus, response, i) {\n    var thisCards = [];\n    console.log(response);\n\n    for (let k = 0; k < response.length; k++) {\n      console.log(response[k]);\n      console.log(k);\n\n      if (response[k] == undefined) {\n        continue;\n      }\n\n      if (response[k].status == responseStatus[i]) {\n        console.log('one of it', response[k].subject);\n        var thisCardObj = {\n          id: response[k].id,\n          title: response[k].asignee,\n          cardStyle: {\n            \"width\": 270,\n            \"maxWidth\": 270,\n            \"margin\": \"auto\",\n            \"marginBottom\": 5\n          },\n          description: 'Subject: ' + response[k].subject + '\\n' + 'Requestor: ' + response[k].requestor + '\\n' + 'Tag: ' + response[k].wish_type + '\\n' + 'Due Date: ' + response[k].date,\n          label: 'Update:' + moment(response[k].date).format('YYYY-MM-DD')\n        };\n        thisCards.push(thisCardObj);\n        console.log(thisCardObj);\n      } else {\n        continue;\n      }\n    }\n\n    console.log('thisCard: ' + thisCards);\n    return thisCards;\n  }\n\n  async function fetching(tokenPass) {\n    const resStatus = await fetch(`${REACT_APP_BACKEND_URL}/api/wishList/status/`, {\n      method: \"GET\"\n    });\n\n    if (resStatus.status === 500) {\n      alert('Sever Error');\n      return;\n    }\n\n    const responseStatus = await resStatus.json();\n    console.log(responseStatus.status);\n    await setStatusList(responseStatus.status);\n    console.log(tokenPass);\n    const res = await fetch(`${REACT_APP_BACKEND_URL}/api/wishList/`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${tokenPass}`\n      } // body: JSON.stringify({ user: 'admin' })\n\n    });\n\n    if (res.status === 500) {\n      alert('Sever Error');\n      return;\n    }\n\n    const response = await res.json();\n    console.log(response);\n    var dataFromat = {\n      lanes: [],\n      collapsibleLanes: true,\n      cardDraggable: true,\n      editable: true,\n      canAddLanes: true,\n      editLaneTitle: true\n    };\n    setReponseData(response);\n    var showRes = response;\n    showRes.forEach(res => {\n      res.status = res.status.status;\n      res.updated_at = moment(res.updated_at).format('YYYY-MM-DD');\n    });\n    setRows(showRes);\n\n    for (var i = 0; i < responseStatus.status.length; i++) {\n      console.log('hiohi');\n      var thisCards = await getCardByReponse(responseStatus.status, response, i);\n      var laneObj = {\n        id: responseStatus.status[i],\n        title: responseStatus.status[i],\n        label: ' ',\n        cards: thisCards\n      };\n      dataFromat['lanes'].push(laneObj);\n    }\n\n    console.log(response);\n    return dataFromat;\n  }\n\n  async function loginHandler(token) {\n    var afterFetch = await fetching(token);\n    console.log(afterFetch);\n    setData(afterFetch);\n  }\n\n  function checkProperties(obj) {\n    for (var key in obj) {\n      if (obj[key] !== null && obj[key] != \"\") return false;\n    }\n\n    return true;\n  }\n\n  const handleSubmit = async () => {\n    console.log(type);\n    const content = {\n      'requestor': currentUser,\n      'subject': subject,\n      'date': moment(startDate).format('YYYY-MM-DD'),\n      'status': 'Draft',\n      'wish_type': type,\n      'territory': territory,\n      'asignee': assignee,\n      'version': version,\n      'description': description\n    };\n    console.log(token);\n    const fetchRes = await fetch(`${REACT_APP_BACKEND_URL}/api/wishList/post/`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(content)\n    });\n\n    if (fetchRes.status === 500) {\n      alert('Sever Error');\n      return;\n    }\n\n    var afterFetch = await fetching(token);\n    console.log(afterFetch);\n    setData(afterFetch);\n    handleClose();\n  };\n\n  const handleSubmitUpdate = async () => {\n    const content = {\n      'subject': subjectUpdate,\n      'date': moment(startDateUpdate).format('YYYY-MM-DD'),\n      'wish_type': typeUpdate,\n      'territory': territoryUpdate,\n      'asignee': assigneeUpdate,\n      'version': versionUpdate,\n      'description': descriptionUpdate\n    };\n    const fetchRes = await fetch(`${REACT_APP_BACKEND_URL}/api/wishList/put/${currentCradId}/`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(content)\n    });\n\n    if (fetchRes.status === 500) {\n      alert('Sever Error');\n      return;\n    }\n\n    var afterFetch = await fetching(token);\n    console.log(afterFetch);\n    setData(afterFetch);\n    handleCloseUpdate();\n  };\n\n  const handleCreateStatus = async () => {\n    const content = {\n      'status': newColumn\n    };\n    const fetchRes = await fetch(`${REACT_APP_BACKEND_URL}/api/status/post/`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(content)\n    });\n\n    if (fetchRes.status === 500) {\n      alert('Sever Error');\n      return;\n    }\n\n    const response = await fetchRes.json();\n    console.log(response);\n    var afterFetch = await fetching(token);\n    console.log(afterFetch);\n    setData(afterFetch);\n    handleClose();\n  };\n\n  const handleCardDelete = async (cardId, laneId) => {\n    const fetchRes = await fetch(`${REACT_APP_BACKEND_URL}/api/wishList/put/${cardId}/`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    if (fetchRes.status === 500) {\n      alert('Sever Error');\n      return;\n    }\n\n    var afterFetch = await fetching(token);\n    console.log(afterFetch);\n    setData(afterFetch);\n  };\n\n  const thisStyles = {\n    Draft: {\n      backgroundColor: '#f5f5f5'\n    },\n    Submitted: {\n      backgroundColor: '#FFF2E5'\n    },\n    Pending: {\n      backgroundColor: '#F8EDED',\n      borderBottom: 'solid',\n      borderBottomWidth: ' 10px !important',\n      borderBottomColor: 'red'\n    },\n    Completed: {\n      backgroundColor: '#F8F7ED'\n    },\n    QA: {\n      backgroundColor: '#F7F7ED'\n    }\n  };\n\n  const TableRow = ({\n    row,\n    ...restProps\n  }) => /*#__PURE__*/_jsxDEV(Table.Row, { ...restProps,\n    // eslint-disable-next-line no-alert\n    // onClick={() => handleShowUpdate(JSON.stringify(row).id, 0, 0)}\n    onClick: () => handleShowUpdate(row.id, 0, 0),\n    style: {\n      cursor: 'pointer',\n      ...thisStyles[row.status]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      dialogClassName: \"modal-90w\",\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"New Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalInnerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Subject:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"note\",\n            value: subject,\n            placeholder: \"\",\n            onChange: e => setSubject(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalInnerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"dueDate\",\n            children: \"Due Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: startDate,\n            onChange: date => setStartDate(date),\n            className: \"note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalInnerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: type,\n            className: \"note\",\n            onChange: e => setType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Wishlist\",\n              children: \" Wishlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \" Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalInnerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Territory:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: territory,\n            className: \"note\",\n            onChange: e => setTerritory(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PwC Mekong\",\n              children: \" PwC Mekong\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \" Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalInnerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"DM Version:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"note\",\n            value: version,\n            placeholder: \"\",\n            onChange: e => setVersion(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalInnerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Assignee:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"note\",\n            value: assignee,\n            placeholder: \"\",\n            onChange: e => setAssignee(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalInnerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"note\",\n            value: description,\n            placeholder: \"Request details\",\n            onChange: e => setDescription(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showUpdate,\n      onHide: handleCloseUpdate,\n      dialogClassName: \"modal-90w\",\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Ticket Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalInnerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Subject:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"note\",\n            value: subjectUpdate,\n            placeholder: \"\",\n            onChange: e => setSubjectUpdate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalInnerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Due Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: startDateUpdate,\n            onChange: date => setStartDateUpdate(date),\n            className: \"note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalInnerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: typeUpdate,\n            className: \"note\",\n            onChange: e => setTypeUpdate(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Wishlist\",\n              children: \" Wishlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \" Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalInnerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Territory:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: territoryUpdate,\n            className: \"note\",\n            onChange: e => setTerritoryUpdate(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PwC Mekong\",\n              children: \" PwC Mekong\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \" Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalInnerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"DM Version:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"note\",\n            value: versionUpdate,\n            placeholder: \"\",\n            onChange: e => setVersionUpdate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalInnerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Assignee:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"note\",\n            value: assigneeUpdate,\n            placeholder: \"\",\n            onChange: e => setAssigneeUpdate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalInnerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"note\",\n            value: descriptionUpdate,\n            placeholder: \"Request details\",\n            onChange: e => setDescriptionUpdate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseUpdate,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmitUpdate,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showCreate,\n      onHide: handleCloseCreate,\n      dialogClassName: \"modal-90w\",\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add New Column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"New Column Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"note\",\n            value: newColumn,\n            placeholder: \"\",\n            onChange: e => setNewColumn(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseCreate,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleCreateStatus,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }, this), token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boardDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row Boardheader\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4 requestHeader\",\n            children: \" All request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4 \",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-1 requestHeader\",\n            children: [\" \", kanban ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleKanban,\n              size: \"sm\",\n              variant: \"light\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(ListIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 73\n              }, this), \"List View \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleKanban,\n              size: \"sm\",\n              variant: \"light\",\n              children: \" Board view\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 newRequest\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleShow,\n              size: \"sm\",\n              variant: \"light\",\n              children: \" New request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 51\n            }, this), \"  \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleShowCreate,\n              size: \"sm\",\n              variant: \"light\",\n              children: \" New Column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 129\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boardDiv\",\n        children: kanban ? /*#__PURE__*/_jsxDEV(Board, {\n          data: data ? data : dataTemp,\n          handleDragEnd: handleDrag,\n          onCardClick: handleShowUpdate,\n          onCardDelete: handleCardDelete,\n          style: {\n            width: '95vw',\n            height: '80vh',\n            backgroundColor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            rows: rows,\n            columns: columns,\n            children: [/*#__PURE__*/_jsxDEV(SortingState, {\n              defaultSorting: [{\n                columnName: 'date',\n                direction: 'asc'\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GroupingState, {\n              grouping: [{\n                columnName: 'status'\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IntegratedSorting, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IntegratedGrouping, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              rowComponent: TableRow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableHeaderRow, {\n              showSortingControls: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableGroupRow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GroupingPanel, {\n              showSortingControls: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"admin1 / requestor1/ requestor2\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"admin234567 / re234567/ re234567\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"2kJ2jE9ANwlMAzJJQhwEyNts1FQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/treeright/Desktop/pwcCodeTest20210822/frontend/src/App.js"],"names":["React","useCallback","useEffect","useState","useRef","Alert","Button","Modal","ProgressBar","Board","Header","DatePicker","moment","Paper","GroupingState","IntegratedGrouping","SortingState","IntegratedSorting","Grid","Table","TableHeaderRow","TableGroupRow","GroupingPanel","Toolbar","ListIcon","App","token","setToken","username","setUsername","password","setPassword","kanban","setKanban","statusList","setStatusList","responseData","setReponseData","data","setData","show","setShow","showUpdate","setShowUpdate","showCreate","setShowCreate","handleClose","handleShow","handleCloseCreate","handleShowCreate","handleCloseUpdate","handleKanban","dataTemp","setDataTemp","lanes","currentUser","setCurrentUser","REACT_APP_BACKEND_URL","startDate","setStartDate","Date","subject","setSubject","type","setType","territory","setTerritory","version","setVersion","assignee","setAssignee","description","setDescription","startDateUpdate","setStartDateUpdate","subjectUpdate","setSubjectUpdate","typeUpdate","setTypeUpdate","territoryUpdate","setTerritoryUpdate","versionUpdate","setVersionUpdate","assigneeUpdate","setAssigneeUpdate","descriptionUpdate","setDescriptionUpdate","currentCradId","setCurrentCardId","newColumn","setNewColumn","columns","setColumns","name","title","rows","setRows","handleShowUpdate","cardId","metadata","laneId","updateInstance","find","id","date","wish_type","asignee","login","fetchRes","fetch","method","headers","body","JSON","stringify","console","log","status","alert","res","json","access","loginHandler","handleDrag","sourceLaneId","targetLaneId","position","cardDetails","content","Authorization","afterFetch","fetching","componentMounted","getCardByReponse","responseStatus","response","i","thisCards","k","length","undefined","thisCardObj","cardStyle","requestor","label","format","push","tokenPass","resStatus","dataFromat","collapsibleLanes","cardDraggable","editable","canAddLanes","editLaneTitle","showRes","forEach","updated_at","laneObj","cards","checkProperties","obj","key","handleSubmit","handleSubmitUpdate","handleCreateStatus","handleCardDelete","thisStyles","Draft","backgroundColor","Submitted","Pending","borderBottom","borderBottomWidth","borderBottomColor","Completed","QA","TableRow","row","restProps","cursor","e","target","value","width","height","columnName","direction"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport { Alert, Button, Modal, ProgressBar } from \"react-bootstrap\";\nimport Board from 'react-trello'\nimport Header from './Header'\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment'\nimport '@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  GroupingState,\n  IntegratedGrouping,\n  SortingState,\n  IntegratedSorting,\n} from '@devexpress/dx-react-grid';\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n  TableGroupRow,\n  GroupingPanel,\n  Toolbar,\n} from '@devexpress/dx-react-grid-material-ui';\nimport ListIcon from '@material-ui/icons/List';\nfunction App() {\n  const [token, setToken] = useState()\n  const [username, setUsername] = useState()\n  const [password, setPassword] = useState()\n  const [kanban, setKanban] = useState(true)\n  const [statusList, setStatusList] = useState([])\n  const [responseData, setReponseData] = useState([])\n  const [data, setData] = useState();\n  const [show, setShow] = useState(false);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [showCreate, setShowCreate] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleCloseCreate = () => setShowCreate(false);\n  const handleShowCreate = () => setShowCreate(true);\n  const handleCloseUpdate = () => setShowUpdate(false);\n  const handleKanban = () => {\n    if (kanban) { setKanban(false) }\n    else { setKanban(true) }\n  };\n\n  const [dataTemp, setDataTemp] = useState({\n    lanes: [\n    ]\n  });\n  const [currentUser, setCurrentUser] = useState('admin');\n  const REACT_APP_BACKEND_URL = 'http://127.0.0.1:8000'\n  // New request \n  const [startDate, setStartDate] = useState(new Date());\n  const [subject, setSubject] = useState()\n  const [type, setType] = useState('Other')\n  const [territory, setTerritory] = useState('Other')\n  const [version, setVersion] = useState()\n  const [assignee, setAssignee] = useState()\n  const [description, setDescription] = useState()\n  const [startDateUpdate, setStartDateUpdate] = useState(new Date());\n  const [subjectUpdate, setSubjectUpdate] = useState()\n  const [typeUpdate, setTypeUpdate] = useState()\n  const [territoryUpdate, setTerritoryUpdate] = useState()\n  const [versionUpdate, setVersionUpdate] = useState()\n  const [assigneeUpdate, setAssigneeUpdate] = useState()\n  const [descriptionUpdate, setDescriptionUpdate] = useState()\n  const [currentCradId, setCurrentCardId] = useState()\n  const [newColumn, setNewColumn] = useState()\n  const [columns, setColumns] = useState([\n    { name: 'requestor', title: 'Requestor' },\n    { name: 'description', title: 'Description' },\n    { name: 'wish_type', title: 'Tag' },\n    { name: 'date', title: 'Due date' },\n    { name: 'updated_at', title: 'Last modified' },\n    { name: 'status', title: 'Status' }\n  ])\n  const [rows, setRows] = useState([{\n    \"id\": 4,\n    \"status\": {\n      \"id\": 1,\n      \"status\": \"Draft\"\n    },\n    \"date\": \"2021-08-21\",\n    \"wish_type\": \"Other\",\n    \"subject\": \"testing 1\",\n    \"territory\": \"Other\",\n    \"asignee\": \"Me\",\n    \"version\": \"1\",\n    \"description\": \"me agina\",\n    \"updated_at\": \"2021-08-21T22:41:15.570812+08:00\",\n    \"requestor\": 118\n  }])\n  const handleShowUpdate = (cardId, metadata, laneId) => {\n    setShowUpdate(true)\n    const updateInstance = responseData.find(({ id }) => id === cardId);\n    setStartDateUpdate(new Date(updateInstance.date))\n    setSubjectUpdate(updateInstance.subject)\n    setTypeUpdate(updateInstance.wish_type)\n    setTerritoryUpdate(updateInstance.territory)\n    setVersionUpdate(updateInstance.version)\n    setAssigneeUpdate(updateInstance.asignee)\n    setDescriptionUpdate(updateInstance.description)\n    setCurrentCardId(cardId)\n  };\n  const login = async () => {\n    const fetchRes = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/token/`,\n      {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          \"username\": username,\n          \"password\": password\n        })\n      }\n    );\n    console.log(fetchRes.status)\n    if (fetchRes.status === 500) {\n      alert('Sever Error')\n      return;\n    }\n    const res = await fetchRes.json();\n    if (res.access) {\n      console.log(res.access)\n      setToken(res.access)\n      loginHandler(res.access)\n    }\n\n  }\n  const handleDrag = async (cardId, sourceLaneId, targetLaneId, position, cardDetails) => {\n    console.log(cardId, sourceLaneId, targetLaneId, position, cardDetails)\n    const content = {\n      'status': targetLaneId,\n    };\n    const fetchRes = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/wishList/put/${cardId}/`,\n      {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(content),\n      }\n    );\n    if (fetchRes.status === 500) {\n      alert('Sever Error')\n      return;\n    }\n    var afterFetch = await fetching(token)\n    console.log(afterFetch)\n    setData(afterFetch)\n  }\n  let componentMounted = true; // (3) component is mounted\n\n  async function getCardByReponse(responseStatus, response, i) {\n    var thisCards = []\n    console.log(response)\n    for (let k = 0; k < response.length; k++) {\n      console.log(response[k])\n      console.log(k)\n      if (response[k] == undefined) { continue }\n      if (response[k].status == responseStatus[i]) {\n        console.log('one of it', response[k].subject)\n        var thisCardObj = {\n          id: response[k].id,\n          title: response[k].asignee,\n          cardStyle: { \"width\": 270, \"maxWidth\": 270, \"margin\": \"auto\", \"marginBottom\": 5 },\n          description: 'Subject: ' + response[k].subject + '\\n' + 'Requestor: ' + response[k].requestor + '\\n' + 'Tag: ' + response[k].wish_type + '\\n' + 'Due Date: ' + response[k].date,\n          label: 'Update:' + moment(response[k].date).format('YYYY-MM-DD')\n        }\n        thisCards.push(thisCardObj)\n        console.log(thisCardObj)\n      }\n      else {\n        continue;\n      }\n    }\n    console.log('thisCard: ' + thisCards)\n    return thisCards\n  }\n\n  async function fetching(tokenPass) {\n    const resStatus = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/wishList/status/`,\n      {\n        method: \"GET\",\n      }\n    );\n    if (resStatus.status === 500) {\n      alert('Sever Error')\n      return;\n    }\n    const responseStatus = await resStatus.json()\n    console.log(responseStatus.status)\n    await setStatusList(responseStatus.status)\n    console.log(tokenPass)\n\n    const res = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/wishList/`,\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${tokenPass}`,\n        },\n        // body: JSON.stringify({ user: 'admin' })\n      }\n    );\n    if (res.status === 500) {\n      alert('Sever Error')\n      return;\n    }\n    const response = await res.json()\n    console.log(response)\n    var dataFromat = {\n      lanes: [\n\n      ],\n      collapsibleLanes: true,\n      cardDraggable: true,\n      editable: true,\n      canAddLanes: true,\n      editLaneTitle: true\n    }\n    setReponseData(response)\n    var showRes = response\n    showRes.forEach(res => {\n      res.status = res.status.status\n      res.updated_at = moment(res.updated_at).format('YYYY-MM-DD')\n    });\n    setRows(showRes)\n    for (var i = 0; i < responseStatus.status.length; i++) {\n      console.log('hiohi')\n      var thisCards = await getCardByReponse(responseStatus.status, response, i)\n      var laneObj = {\n        id: responseStatus.status[i],\n        title: responseStatus.status[i],\n        label: ' ',\n        cards: thisCards\n      }\n      dataFromat['lanes'].push(laneObj)\n\n    }\n    console.log(response)\n    return dataFromat\n  }\n  async function loginHandler(token) {\n\n    var afterFetch = await fetching(token)\n    console.log(afterFetch)\n    setData(afterFetch)\n  }\n\n  function checkProperties(obj) {\n    for (var key in obj) {\n      if (obj[key] !== null && obj[key] != \"\")\n        return false;\n    }\n    return true;\n  }\n  const handleSubmit = async () => {\n    console.log(type)\n\n    const content = {\n      'requestor': currentUser,\n      'subject': subject,\n      'date': moment(startDate).format('YYYY-MM-DD'),\n      'status': 'Draft',\n      'wish_type': type,\n      'territory': territory,\n      'asignee': assignee,\n      'version': version,\n      'description': description\n    };\n    console.log(token)\n    const fetchRes = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/wishList/post/`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(content),\n      }\n    );\n    if (fetchRes.status === 500) {\n      alert('Sever Error')\n      return;\n    }\n    var afterFetch = await fetching(token)\n    console.log(afterFetch)\n    setData(afterFetch)\n    handleClose()\n  }\n  const handleSubmitUpdate = async () => {\n    const content = {\n      'subject': subjectUpdate,\n      'date': moment(startDateUpdate).format('YYYY-MM-DD'),\n      'wish_type': typeUpdate,\n      'territory': territoryUpdate,\n      'asignee': assigneeUpdate,\n      'version': versionUpdate,\n      'description': descriptionUpdate\n    };\n    const fetchRes = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/wishList/put/${currentCradId}/`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(content),\n      }\n    );\n    if (fetchRes.status === 500) {\n      alert('Sever Error')\n      return;\n    }\n    var afterFetch = await fetching(token)\n    console.log(afterFetch)\n    setData(afterFetch)\n    handleCloseUpdate()\n  }\n  const handleCreateStatus = async () => {\n    const content = {\n      'status': newColumn\n    };\n    const fetchRes = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/status/post/`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(content),\n      }\n    );\n    if (fetchRes.status === 500) {\n      alert('Sever Error')\n      return;\n    }\n    const response = await fetchRes.json()\n    console.log(response)\n    var afterFetch = await fetching(token)\n    console.log(afterFetch)\n    setData(afterFetch)\n    handleClose()\n\n  }\n  const handleCardDelete = async (cardId, laneId) => {\n\n    const fetchRes = await fetch(\n      `${REACT_APP_BACKEND_URL}/api/wishList/put/${cardId}/`,\n      {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    if (fetchRes.status === 500) {\n      alert('Sever Error')\n      return;\n    }\n    var afterFetch = await fetching(token)\n    console.log(afterFetch)\n    setData(afterFetch)\n\n  }\n  const thisStyles = {\n    Draft: {\n      backgroundColor: '#f5f5f5',\n    },\n    Submitted: {\n      backgroundColor: '#FFF2E5',\n    },\n    Pending: {\n      backgroundColor: '#F8EDED',\n      borderBottom: 'solid',\n      borderBottomWidth: ' 10px !important',\n      borderBottomColor: 'red'\n    },\n    Completed: {\n      backgroundColor: '#F8F7ED',\n    },\n    QA: {\n      backgroundColor: '#F7F7ED',\n    },\n  };\n\n  const TableRow = ({ row, ...restProps }) => (\n    <Table.Row\n      {...restProps}\n      // eslint-disable-next-line no-alert\n      // onClick={() => handleShowUpdate(JSON.stringify(row).id, 0, 0)}\n      onClick={() => handleShowUpdate(row.id, 0, 0)}\n      style={{\n        cursor: 'pointer',\n        ...thisStyles[row.status],\n      }}\n    />)\n  return (\n    <>\n      <Modal show={show} onHide={handleClose} dialogClassName=\"modal-90w\" size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header >\n          <Modal.Title>New Request</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"modalInnerDiv\">\n            <label>\n              Subject:\n            </label>\n            <input\n              className=\"note\"\n              value={subject}\n              placeholder=\"\"\n              onChange={(e) => setSubject(e.target.value)}\n              required\n            >\n            </input>\n          </div>\n          <div className=\"modalInnerDiv\">\n\n            <label className='dueDate'>\n              Due Date:\n            </label>\n            <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} className='note' />\n          </div>\n          <div className=\"modalInnerDiv\">\n\n            <label>\n              Type:\n            </label>\n            <select value={type} className=\"note\" onChange={(e) => setType(e.target.value)}>\n              <option value=\"Wishlist\"> Wishlist</option>\n              <option value=\"Other\"> Other</option>\n            </select>\n\n          </div>\n          <div className=\"modalInnerDiv\">\n\n            <label>\n              Territory:\n            </label>\n            <select value={territory} className=\"note\" onChange={(e) => setTerritory(e.target.value)}>\n              <option value=\"PwC Mekong\"> PwC Mekong</option>\n              <option value=\"Other\"> Other</option>\n            </select>\n\n\n          </div>\n          <div className=\"modalInnerDiv\">\n\n            <label>\n              DM Version:\n            </label>\n            <input\n              className=\"note\"\n              value={version}\n              placeholder=\"\"\n              onChange={(e) => setVersion(e.target.value)}\n              required\n            >\n            </input>\n          </div>\n          <div className=\"modalInnerDiv\">\n\n            <label>\n              Assignee:\n            </label>\n            <input\n              className=\"note\"\n              value={assignee}\n              placeholder=\"\"\n              onChange={(e) => setAssignee(e.target.value)}\n              required\n            >\n            </input>\n          </div>\n          <div className=\"modalInnerDiv\">\n\n            <label>\n              Description:\n            </label>\n            <textarea\n              className=\"note\"\n              value={description}\n              placeholder=\"Request details\"\n              onChange={(e) => setDescription(e.target.value)}\n              required\n            >\n            </textarea>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleSubmit}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal show={showUpdate} onHide={handleCloseUpdate} dialogClassName=\"modal-90w\" size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header >\n          <Modal.Title>Ticket Information</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"modalInnerDiv\">\n            <label>\n              Subject:\n            </label>\n            <input\n              className=\"note\"\n              value={subjectUpdate}\n              placeholder=\"\"\n              onChange={(e) => setSubjectUpdate(e.target.value)}\n              required\n            >\n            </input>\n          </div>\n          <div className=\"modalInnerDiv\">\n\n            <label>\n              Due Date:\n            </label>\n            <DatePicker selected={startDateUpdate} onChange={(date) => setStartDateUpdate(date)} className='note' />\n          </div>\n          <div className=\"modalInnerDiv\">\n\n            <label>\n              Type:\n            </label>\n            <select value={typeUpdate} className=\"note\" onChange={(e) => setTypeUpdate(e.target.value)}\n            >\n              <option value=\"Wishlist\"> Wishlist</option>\n              <option value=\"Other\"> Other</option>\n            </select>\n          </div>\n          <div className=\"modalInnerDiv\">\n\n            <label>\n              Territory:\n            </label>\n            <select value={territoryUpdate} className=\"note\" onChange={(e) => setTerritoryUpdate(e.target.value)}\n            >\n              <option value=\"PwC Mekong\"> PwC Mekong</option>\n              <option value=\"Other\"> Other</option>\n            </select>\n          </div>\n          <div className=\"modalInnerDiv\">\n\n            <label>\n              DM Version:\n            </label>\n            <input\n              className=\"note\"\n              value={versionUpdate}\n              placeholder=\"\"\n              onChange={(e) => setVersionUpdate(e.target.value)}\n              required\n            >\n            </input>\n          </div>\n          <div className=\"modalInnerDiv\">\n\n            <label>\n              Assignee:\n            </label>\n            <input\n              className=\"note\"\n              value={assigneeUpdate}\n              placeholder=\"\"\n              onChange={(e) => setAssigneeUpdate(e.target.value)}\n              required\n            >\n            </input>\n          </div>\n          <div className=\"modalInnerDiv\">\n\n            <label>\n              Description:\n            </label>\n            <textarea\n              className=\"note\"\n              value={descriptionUpdate}\n              placeholder=\"Request details\"\n              onChange={(e) => setDescriptionUpdate(e.target.value)}\n              required\n            >\n            </textarea>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseUpdate}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleSubmitUpdate}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal show={showCreate} onHide={handleCloseCreate} dialogClassName=\"modal-90w\" size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered>\n        <Modal.Header >\n          <Modal.Title>Add New Column</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row\">\n            <label>\n              New Column Name:\n            </label>\n            <input\n              className=\"note\"\n              value={newColumn}\n              placeholder=\"\"\n              onChange={(e) => setNewColumn(e.target.value)}\n              required\n            >\n            </input>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseCreate}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleCreateStatus}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {token ? <div className=\"App\">\n        <Header />\n        <div className='boardDiv'>\n          <div className='row Boardheader'>\n\n            <div className='col-md-4 requestHeader'> All request</div>\n            <div className='col-md-4 '> </div>\n            <div className='col-md-1 requestHeader' > {kanban ?\n              <Button onClick={handleKanban} size='sm' variant=\"light\"> <ListIcon />List View </Button>\n              : <Button onClick={handleKanban} size='sm' variant=\"light\"> Board view</Button>}\n            </div>\n            <div className='col-md-2 newRequest'> <Button onClick={handleShow} size='sm' variant=\"light\"> New request</Button>  <Button onClick={handleShowCreate} size='sm' variant=\"light\"> New Column</Button></div>\n\n          </div>\n        </div>\n        <div className='boardDiv'>\n          {kanban ? <Board data={data ? data : dataTemp} handleDragEnd={handleDrag} onCardClick={handleShowUpdate} onCardDelete={handleCardDelete} style={{ width: '95vw', height: '80vh', backgroundColor: 'white' }} />\n            : <Paper>\n              <Grid\n                rows={rows}\n                columns={columns}\n              >\n                <SortingState\n                  defaultSorting={[{ columnName: 'date', direction: 'asc' }]}\n                />\n                <GroupingState\n                  grouping={[{ columnName: 'status' }]}\n                />\n                <IntegratedSorting />\n\n                <IntegratedGrouping />\n\n                <Table rowComponent={TableRow} />\n                <TableHeaderRow showSortingControls />\n                <TableGroupRow />\n                <Toolbar />\n                <GroupingPanel showSortingControls />\n              </Grid>\n            </Paper>}\n        </div>\n      </div> :\n        <div className=\"App\">\n          <div className=\"row\">\n            <label>Username</label><input placeholder='admin1 / requestor1/ requestor2' value={username} onChange={(e) => setUsername(e.target.value)}\n            ></input>\n          </div>\n          <div className='row'>\n            <label>Password</label><input placeholder='admin234567 / re234567/ re234567' value={password} onChange={(e) => setPassword(e.target.value)}\n            ></input>\n          </div>\n          <button onClick={login}>Login </button>\n        </div>\n      }\n    </>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}